
// Include theming for Angular Material with `mat.theme()`.
// This Sass mixin will define CSS variables that are used for styling Angular Material
// components according to the Material 3 design spec.
// Learn more about theming and how to use it for your application's
// custom components at https://material.angular.dev/guide/theming
@use '@angular/material' as mat;
@use 'sass:map';

// ðŸŽ¨ Color palette
$bufferoo-primary: mat.define-palette(mat.$deep-orange-palette, 700, 800, 900); // Rusty orange
$bufferoo-accent: mat.define-palette(mat.$green-palette, 500, 600, 700); // Eucalyptus green
$bufferoo-warn: mat.define-palette(mat.$red-palette, 600); // Red dirt / warning
$bufferoo-typography: mat.define-typography-config(); // or use `Roboto`


html {
  @include mat.theme((
    color: (
      primary: $bufferoo-primary,
      accent: $bufferoo-accent,
      warn: $bufferoo-warn,
      tertiary: $bufferoo-accent,
    ),
    typography: Roboto,
    density: 0,
  ));
}

body {
  // Default the application to a light color theme. This can be changed to
  // `dark` to enable the dark color theme, or to `light dark` to defer to the
  // user's system settings.
  color-scheme: light;

  // Set a default background, font and text colors for the application using
  // Angular Material's system-level CSS variables. Learn more about these
  // variables at https://material.angular.dev/guide/system-variables
  background-color: var(--mat-sys-surface);
  color: var(--mat-sys-on-surface);
  font: var(--mat-sys-body-medium);

  // Reset the user agent margin.
  margin: 0;
}
